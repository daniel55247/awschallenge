# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: fslabs test aws cicd

on:
  push:
    branches: main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: checkout
      uses: actions/checkout@v4

    - name: review directory
      run: |
        pwd
        ls -la

    - name: nodejs config
      uses: actions/setup-node@v4
      with:
        node-version: 15
        cache: 'npm'
        cache-dependency-path: codebase/rdicidr-0.1.0/package-lock.json

    - name: install
      working-directory: codebase/rdicidr-0.1.0
      run: npm install 

    - name: lint
      working-directory: codebase/rdicidr-0.1.0
      run: npm run lint
      
    - name: prettier
      working-directory: codebase/rdicidr-0.1.0
      run: npm run prettier || true 
      
    - name: test
      working-directory: codebase/rdicidr-0.1.0
      run: CI=true npm run test

    - name: build
      working-directory: codebase/rdicidr-0.1.0
      run: npm run build

  buildimage:

    runs-on: ubuntu-latest
    needs: [build]

    steps:

    - name: checkout
      uses: actions/checkout@v4

    - name: Build the Docker image
      working-directory: codebase/rdicidr-0.1.0
      run: |
        echo "${{secrets.GHCR_TOKEN}}" | docker login ghcr.io -u daniel55247 --password-stdin
        docker build -t ghcr.io/daniel55247/awschallenge/awschallengeimage:latest . 
        docker push ghcr.io/daniel55247/awschallenge/awschallengeimage:latest

  deploy:

      runs-on: ubuntu-latest
      needs: [buildimage]
    
      steps:
      
      - name: checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: app-container
          image: ghcr.io/daniel55247/awschallenge/awschallengeimage:latest
    
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: testservice
          cluster: testcluster
          wait-for-service-stability: true





    

    